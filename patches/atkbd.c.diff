--- a/atkbd.c
+++ b/atkbd.c
@@ -753,7 +753,6 @@ static void atkbd_deactivate(struct atkbd *atkbd)
 static int atkbd_probe(struct atkbd *atkbd)
 {
 	struct ps2dev *ps2dev = &atkbd->ps2dev;
-	unsigned char param[2];
 
 /*
  * Some systems, where the bit-twiddling when testing the io-lines of the
@@ -767,39 +766,7 @@ static int atkbd_probe(struct atkbd *atkbd)
 				 "keyboard reset failed on %s\n",
 				 ps2dev->serio->phys);
 
-/*
- * Then we check the keyboard ID. We should get 0xab83 under normal conditions.
- * Some keyboards report different values, but the first byte is always 0xab or
- * 0xac. Some old AT keyboards don't report anything. If a mouse is connected, this
- * should make sure we don't try to set the LEDs on it.
- */
-
-	param[0] = param[1] = 0xa5;	/* initialize with invalid values */
-	if (ps2_command(ps2dev, param, ATKBD_CMD_GETID)) {
-
-/*
- * If the get ID command failed, we check if we can at least set the LEDs on
- * the keyboard. This should work on every keyboard out there. It also turns
- * the LEDs off, which we want anyway.
- */
-		param[0] = 0;
-		if (ps2_command(ps2dev, param, ATKBD_CMD_SETLEDS))
-			return -1;
-		atkbd->id = 0xabba;
-		return 0;
-	}
-
-	if (!ps2_is_keyboard_id(param[0]))
-		return -1;
-
-	atkbd->id = (param[0] << 8) | param[1];
-
-	if (atkbd->id == 0xaca1 && atkbd->translated) {
-		dev_err(&ps2dev->serio->dev,
-			"NCD terminal keyboards are only supported on non-translating controllers. "
-			"Use i8042.direct=1 to disable translation.\n");
-		return -1;
-	}
+	atkbd->id = 0xab83;
 
 /*
  * Make sure nothing is coming from the keyboard and disturbs our
